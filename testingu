import pigpio
import time

TRIG = 9    # GPIO pin connected to TRIG
ECHO = 10   # GPIO pin connected to ECHO

pi = pigpio.pi()

if not pi.connected:
    print("Failed to connect to pigpio daemon!")
    exit()

# Set up GPIO modes
pi.set_mode(TRIG, pigpio.OUTPUT)
pi.set_mode(ECHO, pigpio.INPUT)

def get_distance():
    # Ensure TRIG is low
    pi.write(TRIG, 0)
    time.sleep(2e-6)  # 2 microseconds

    # Send 10Âµs pulse
    pi.write(TRIG, 1)
    time.sleep(10e-6)  # 10 microseconds
    pi.write(TRIG, 0)

    # Wait for echo to go high
    start_time = time.time()
    while pi.read(ECHO) == 0:
        if time.time() - start_time > 0.03:  # 30 ms timeout
            return None
    start = time.time()

    # Wait for echo to go low
    while pi.read(ECHO) == 1:
        if time.time() - start > 0.03:  # 30 ms timeout
            return None
    end = time.time()

    # Calculate duration
    duration = end - start  # seconds
    distance_cm = (duration * 34300) / 2  # speed of sound = 34300 cm/s

    return round(distance_cm, 2)

try:
    while True:
        dist = get_distance()
        if dist is not None:
            print(f"Distance: {dist} cm")
        else:
            print("Timeout or no object detected.")
        time.sleep(0.3)  # avoid flooding output

except KeyboardInterrupt:
    print("\nMeasurement stopped by user")

finally:
    pi.stop()
